@startuml
skinparam shadowing false
skinparam defaultFontColor #000000
skinparam package {
    BorderColor #555555
    BackgroundColor #FFFFFF
}
skinparam rectangle {
    BorderColor #333333
    BackgroundColor #FFFFFF
}

title TMS 架构方案对比

' 左边：system_server 方案
package "方案 A：TMS 在 framework 层（system_server）" #E3F2FD {
    rectangle "应用层\n- 主题商店 App（前端 UI）\n- 其他授权主题客户端" as A_App
    rectangle "Framework 层\n- ThemeManagerService (TMS)\n- OverlayManagerService (OMS)\n- PackageManagerService (PMS)" as A_FW
    rectangle "数据存储\n- 主题数据库 (ThemeDB)\n- 已安装 RRO APKs" as A_DB

    A_App --> A_FW : AIDL 调用
    A_FW --> A_DB : 读写主题元数据 / 访问 RRO
}

note right of A_FW
**优点：**
- 安全隔离彻底（system_server）
- 公共 API 可复用给多 App
- 生命周期与系统一致，极稳定
**缺点：**
- 迭代慢，需 OTA
- IPC 有一定性能开销
- 开发维护成本高
end note

' 右边：App 集成方案
package "方案 B：TMS 集成在主题商店 App 内" #E0F2F1 {
    rectangle "主题商店 App（包含 TMS 模块）\n- UI 展示\n- 主题管理逻辑\n- 调用系统服务（OMS / PMS）" as B_App
    rectangle "Framework 层\n- OverlayManagerService (OMS)\n- PackageManagerService (PMS)" as B_FW
    rectangle "数据存储\n- 主题数据库 (ThemeDB)\n- 已安装 RRO APKs" as B_DB

    B_App --> B_FW : 直接系统 API 调用
    B_App --> B_DB : 读写主题元数据 / 访问 RRO
}

note right of B_App
**优点：**
- 迭代快（应用更新即可）
- 架构简单，无需额外系统服务
- 性能好（无跨进程）
**缺点：**
- 安全性依赖 App 权限
- 仅限单一商店使用
- 商店 App 崩溃可能影响体验
end note

@enduml
